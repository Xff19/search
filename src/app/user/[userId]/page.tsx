import React from "react";
import getUser from "../../../../lib/getUser";
import getUserPost from "../../../../lib/getUserPost";
import UserPost from "./comopnents/userPost";
import getAllUsers from "../../../../lib/getAllUsers";
import type { Metadata } from "next";
import { notFound } from "next/navigation";
type Params = {
  params: { userId: string };
};
export async function generateMetadata({
  params: { userId },
}: Params): Promise<Metadata> {
  const userData: Promise<User> = getUser(userId);
  const user = await userData;  
    if (!user.name) {
    return {
      title: "undefind",
    };
  }
  return {
    title: user.name,
    description: "Generated by create next app",
  };
}
export default async function userId({ params: { userId } }: Params) {
  const userData: Promise<User> = getUser(userId);
  const userPostData: Promise<Post[]> = getUserPost(userId);
  const [user, userPost] = await Promise.all([userData, userPostData]);  
  if(!user.name) return notFound()
  return (
    <div>
      <h2>{user.name}</h2>
      <br />
      <UserPost promise={userPostData}></UserPost>
    </div>
  );
}
// ssg
export async function generateStaticParams() {
  const res: Promise<User[]> = getAllUsers();
  const users = await res;
  return users.map((user) => ({ userId: user.id.toString() }));
}
